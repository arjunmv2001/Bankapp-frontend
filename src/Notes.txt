1.create a new project - ng new bankapp-frontend
2.cd bankapp-frontend 
3.code .
4.Run the project - ng s -o
5.Clear the code in app.component.html
6.Install 3rd party libraries
    (i) Bootstrap
    (ii) fontawesome
    (iii)google fonts
7.Create Components
    ->Register - ng g c Register
    ->Login - ng g c Login
    ->Dashboard - ng g c Dashboard
    ->Transaction - ng g c Transaction
    ->Pagenotfound- ng g c Pagenotfound
8.Set path
9.Use Router-Outlet in app.component.html
10.Page Designing
11.Reactive Forms -
    Reactive forms provide a model-driven approach to handling form inputs whose values change over time.
    Reactive forms are built around observable streams, where form inputs and values are provided as streams of input values,
    which can be accessedÂ synchronously.
12.To use reactive form controls, import ReactiveFormsModule from the @angular/forms package and add it to your NgModule's imports array.
    import { ReactiveFormsModule } from '@angular/forms';

    @NgModule({
     imports: [
     // other imports ...
     ReactiveFormsModule
     ],
     })
     export class AppModule { }
     ->FormGroup - ts
     ->FormArray - ts 
     ->FormControl - html
     -> Form builder
     The FormBuilder provides syntactic sugar that shortens creating instances of a FormControl, FormGroup, or FormArray.
      It reduces the amount of boilerplate needed to build complex forms.
     ->Form Group
      Constructs a new FormGroup instance. Accepts a single generic argument,
      which is an object containing all the keys and corresponding inner control types.
13. *ngIf - Apply Condition

